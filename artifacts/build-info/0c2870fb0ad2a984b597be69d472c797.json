{
	"id": "0c2870fb0ad2a984b597be69d472c797",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"LogicalOperators.sol": {
				"content": "// SPDX-License-Identifier: Unlicensed\r\n\r\npragma solidity >=0.7.0;\r\n\r\ncontract operators {\r\n    uint public val = 4;\r\n\r\n    function logicalAND() public pure returns(bool) {\r\n        return (2 > 1 && 2 > 0);\r\n    }\r\n\r\n    function logicalOR() public pure returns(bool) {\r\n        return (2 > 1 || 2 > 4);\r\n    }\r\n\r\n    function logicalNOT() public pure returns(bool) {\r\n        return !(2 == 4);\r\n    }\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"LogicalOperators.sol": {
				"operators": {
					"abi": [
						{
							"inputs": [],
							"name": "logicalAND",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "logicalNOT",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "logicalOR",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "val",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"LogicalOperators.sol\":70:407  contract operators {... */\n  mstore(0x40, 0x80)\n    /* \"LogicalOperators.sol\":114:115  4 */\n  0x04\n    /* \"LogicalOperators.sol\":96:115  uint public val = 4 */\n  0x00\n  sstore\n    /* \"LogicalOperators.sol\":70:407  contract operators {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"LogicalOperators.sol\":70:407  contract operators {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1c98b567\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3c6bb436\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa4077431\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xbf808d90\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"LogicalOperators.sol\":222:311  function logicalOR() public pure returns(bool) {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LogicalOperators.sol\":96:115  uint public val = 4 */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LogicalOperators.sol\":124:214  function logicalAND() public pure returns(bool) {... */\n    tag_5:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LogicalOperators.sol\":319:402  function logicalNOT() public pure returns(bool) {... */\n    tag_6:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LogicalOperators.sol\":222:311  function logicalOR() public pure returns(bool) {... */\n    tag_8:\n        /* \"LogicalOperators.sol\":263:267  bool */\n      0x00\n        /* \"LogicalOperators.sol\":292:293  1 */\n      0x01\n        /* \"LogicalOperators.sol\":288:289  2 */\n      0x02\n        /* \"LogicalOperators.sol\":288:293  2 > 1 */\n      gt\n        /* \"LogicalOperators.sol\":288:302  2 > 1 || 2 > 4 */\n      dup1\n      tag_22\n      jumpi\n      pop\n        /* \"LogicalOperators.sol\":301:302  4 */\n      0x04\n        /* \"LogicalOperators.sol\":297:298  2 */\n      0x02\n        /* \"LogicalOperators.sol\":297:302  2 > 4 */\n      gt\n        /* \"LogicalOperators.sol\":288:302  2 > 1 || 2 > 4 */\n    tag_22:\n        /* \"LogicalOperators.sol\":280:303  return (2 > 1 || 2 > 4) */\n      swap1\n      pop\n        /* \"LogicalOperators.sol\":222:311  function logicalOR() public pure returns(bool) {... */\n      swap1\n      jump\t// out\n        /* \"LogicalOperators.sol\":96:115  uint public val = 4 */\n    tag_12:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"LogicalOperators.sol\":124:214  function logicalAND() public pure returns(bool) {... */\n    tag_16:\n        /* \"LogicalOperators.sol\":166:170  bool */\n      0x00\n        /* \"LogicalOperators.sol\":195:196  1 */\n      0x01\n        /* \"LogicalOperators.sol\":191:192  2 */\n      0x02\n        /* \"LogicalOperators.sol\":191:196  2 > 1 */\n      gt\n        /* \"LogicalOperators.sol\":191:205  2 > 1 && 2 > 0 */\n      dup1\n      iszero\n      tag_24\n      jumpi\n      pop\n        /* \"LogicalOperators.sol\":204:205  0 */\n      0x00\n        /* \"LogicalOperators.sol\":200:201  2 */\n      0x02\n        /* \"LogicalOperators.sol\":200:205  2 > 0 */\n      gt\n        /* \"LogicalOperators.sol\":191:205  2 > 1 && 2 > 0 */\n    tag_24:\n        /* \"LogicalOperators.sol\":183:206  return (2 > 1 && 2 > 0) */\n      swap1\n      pop\n        /* \"LogicalOperators.sol\":124:214  function logicalAND() public pure returns(bool) {... */\n      swap1\n      jump\t// out\n        /* \"LogicalOperators.sol\":319:402  function logicalNOT() public pure returns(bool) {... */\n    tag_19:\n        /* \"LogicalOperators.sol\":361:365  bool */\n      0x00\n        /* \"LogicalOperators.sol\":392:393  4 */\n      0x04\n        /* \"LogicalOperators.sol\":387:388  2 */\n      0x02\n        /* \"LogicalOperators.sol\":387:393  2 == 4 */\n      eq\n        /* \"LogicalOperators.sol\":385:394  !(2 == 4) */\n      iszero\n        /* \"LogicalOperators.sol\":378:394  return !(2 == 4) */\n      swap1\n      pop\n        /* \"LogicalOperators.sol\":319:402  function logicalNOT() public pure returns(bool) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:97   */\n    tag_26:\n        /* \"#utility.yul\":41:48   */\n      0x00\n        /* \"#utility.yul\":84:89   */\n      dup2\n        /* \"#utility.yul\":77:90   */\n      iszero\n        /* \"#utility.yul\":70:91   */\n      iszero\n        /* \"#utility.yul\":59:91   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:97   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":103:212   */\n    tag_27:\n        /* \"#utility.yul\":184:205   */\n      tag_33\n        /* \"#utility.yul\":199:204   */\n      dup2\n        /* \"#utility.yul\":184:205   */\n      tag_26\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":179:182   */\n      dup3\n        /* \"#utility.yul\":172:206   */\n      mstore\n        /* \"#utility.yul\":103:212   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":218:428   */\n    tag_10:\n        /* \"#utility.yul\":305:309   */\n      0x00\n        /* \"#utility.yul\":343:345   */\n      0x20\n        /* \"#utility.yul\":332:341   */\n      dup3\n        /* \"#utility.yul\":328:346   */\n      add\n        /* \"#utility.yul\":320:346   */\n      swap1\n      pop\n        /* \"#utility.yul\":356:421   */\n      tag_35\n        /* \"#utility.yul\":418:419   */\n      0x00\n        /* \"#utility.yul\":407:416   */\n      dup4\n        /* \"#utility.yul\":403:420   */\n      add\n        /* \"#utility.yul\":394:400   */\n      dup5\n        /* \"#utility.yul\":356:421   */\n      tag_27\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":218:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":434:511   */\n    tag_28:\n        /* \"#utility.yul\":471:478   */\n      0x00\n        /* \"#utility.yul\":500:505   */\n      dup2\n        /* \"#utility.yul\":489:505   */\n      swap1\n      pop\n        /* \"#utility.yul\":434:511   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":517:635   */\n    tag_29:\n        /* \"#utility.yul\":604:628   */\n      tag_38\n        /* \"#utility.yul\":622:627   */\n      dup2\n        /* \"#utility.yul\":604:628   */\n      tag_28\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":599:602   */\n      dup3\n        /* \"#utility.yul\":592:629   */\n      mstore\n        /* \"#utility.yul\":517:635   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":641:863   */\n    tag_14:\n        /* \"#utility.yul\":734:738   */\n      0x00\n        /* \"#utility.yul\":772:774   */\n      0x20\n        /* \"#utility.yul\":761:770   */\n      dup3\n        /* \"#utility.yul\":757:775   */\n      add\n        /* \"#utility.yul\":749:775   */\n      swap1\n      pop\n        /* \"#utility.yul\":785:856   */\n      tag_40\n        /* \"#utility.yul\":853:854   */\n      0x00\n        /* \"#utility.yul\":842:851   */\n      dup4\n        /* \"#utility.yul\":838:855   */\n      add\n        /* \"#utility.yul\":829:835   */\n      dup5\n        /* \"#utility.yul\":785:856   */\n      tag_29\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":641:863   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b2b82f6a27bc4005ff8271c2c3875a96c4b84dd526a5f03daca9f1ff2a0467e164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260045f553480156012575f80fd5b5061019f806100205f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c80631c98b5671461004e5780633c6bb4361461006c578063a40774311461008a578063bf808d90146100a8575b5f80fd5b6100566100c6565b604051610063919061011f565b60405180910390f35b6100746100dd565b6040516100819190610150565b60405180910390f35b6100926100e2565b60405161009f919061011f565b60405180910390f35b6100b06100f9565b6040516100bd919061011f565b60405180910390f35b5f6001600211806100d8575060046002115b905090565b5f5481565b5f600160021180156100f457505f6002115b905090565b5f600460021415905090565b5f8115159050919050565b61011981610105565b82525050565b5f6020820190506101325f830184610110565b92915050565b5f819050919050565b61014a81610138565b82525050565b5f6020820190506101635f830184610141565b9291505056fea2646970667358221220b2b82f6a27bc4005ff8271c2c3875a96c4b84dd526a5f03daca9f1ff2a0467e164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 PUSH0 SSTORE CALLVALUE DUP1 ISZERO PUSH1 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19F DUP1 PUSH2 0x20 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1C98B567 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x3C6BB436 EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0xA4077431 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xBF808D90 EQ PUSH2 0xA8 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x11F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74 PUSH2 0xDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x150 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x92 PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9F SWAP2 SWAP1 PUSH2 0x11F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB0 PUSH2 0xF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x11F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x2 GT DUP1 PUSH2 0xD8 JUMPI POP PUSH1 0x4 PUSH1 0x2 GT JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x2 GT DUP1 ISZERO PUSH2 0xF4 JUMPI POP PUSH0 PUSH1 0x2 GT JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH1 0x2 EQ ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x119 DUP2 PUSH2 0x105 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x132 PUSH0 DUP4 ADD DUP5 PUSH2 0x110 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14A DUP2 PUSH2 0x138 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x163 PUSH0 DUP4 ADD DUP5 PUSH2 0x141 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xB8 0x2F PUSH11 0x27BC4005FF8271C2C3875A SWAP7 0xC4 0xB8 0x4D 0xD5 0x26 0xA5 CREATE RETURNDATASIZE 0xAC 0xA9 CALL SELFDESTRUCT 0x2A DIV PUSH8 0xE164736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "70:337:0:-:0;;;114:1;96:19;;70:337;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@logicalAND_19": {
									"entryPoint": 226,
									"id": 19,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@logicalNOT_46": {
									"entryPoint": 249,
									"id": 46,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@logicalOR_34": {
									"entryPoint": 198,
									"id": 34,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@val_4": {
									"entryPoint": 221,
									"id": 4,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:866:1",
										"nodeType": "YulBlock",
										"src": "0:866:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "49:48:1",
													"nodeType": "YulBlock",
													"src": "49:48:1",
													"statements": [
														{
															"nativeSrc": "59:32:1",
															"nodeType": "YulAssignment",
															"src": "59:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "84:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "84:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "77:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "77:6:1"
																		},
																		"nativeSrc": "77:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "77:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "70:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "70:6:1"
																},
																"nativeSrc": "70:21:1",
																"nodeType": "YulFunctionCall",
																"src": "70:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "59:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "59:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "31:5:1",
														"nodeType": "YulTypedName",
														"src": "31:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "41:7:1",
														"nodeType": "YulTypedName",
														"src": "41:7:1",
														"type": ""
													}
												],
												"src": "7:90:1"
											},
											{
												"body": {
													"nativeSrc": "162:50:1",
													"nodeType": "YulBlock",
													"src": "162:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "179:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "179:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "199:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "199:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "184:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "184:14:1"
																		},
																		"nativeSrc": "184:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "184:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "172:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "172:6:1"
																},
																"nativeSrc": "172:34:1",
																"nodeType": "YulFunctionCall",
																"src": "172:34:1"
															},
															"nativeSrc": "172:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "172:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "103:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "150:5:1",
														"nodeType": "YulTypedName",
														"src": "150:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "157:3:1",
														"nodeType": "YulTypedName",
														"src": "157:3:1",
														"type": ""
													}
												],
												"src": "103:109:1"
											},
											{
												"body": {
													"nativeSrc": "310:118:1",
													"nodeType": "YulBlock",
													"src": "310:118:1",
													"statements": [
														{
															"nativeSrc": "320:26:1",
															"nodeType": "YulAssignment",
															"src": "320:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "332:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "332:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "343:2:1",
																		"nodeType": "YulLiteral",
																		"src": "343:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "328:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:1"
																},
																"nativeSrc": "328:18:1",
																"nodeType": "YulFunctionCall",
																"src": "328:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "320:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "320:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "394:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "394:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "407:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "407:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "418:1:1",
																				"nodeType": "YulLiteral",
																				"src": "418:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "403:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:1"
																		},
																		"nativeSrc": "403:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "403:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "356:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "356:37:1"
																},
																"nativeSrc": "356:65:1",
																"nodeType": "YulFunctionCall",
																"src": "356:65:1"
															},
															"nativeSrc": "356:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "356:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "218:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "282:9:1",
														"nodeType": "YulTypedName",
														"src": "282:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "294:6:1",
														"nodeType": "YulTypedName",
														"src": "294:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "305:4:1",
														"nodeType": "YulTypedName",
														"src": "305:4:1",
														"type": ""
													}
												],
												"src": "218:210:1"
											},
											{
												"body": {
													"nativeSrc": "479:32:1",
													"nodeType": "YulBlock",
													"src": "479:32:1",
													"statements": [
														{
															"nativeSrc": "489:16:1",
															"nodeType": "YulAssignment",
															"src": "489:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "500:5:1",
																"nodeType": "YulIdentifier",
																"src": "500:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "489:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "489:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "434:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "461:5:1",
														"nodeType": "YulTypedName",
														"src": "461:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "471:7:1",
														"nodeType": "YulTypedName",
														"src": "471:7:1",
														"type": ""
													}
												],
												"src": "434:77:1"
											},
											{
												"body": {
													"nativeSrc": "582:53:1",
													"nodeType": "YulBlock",
													"src": "582:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "599:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "599:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "622:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "622:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "604:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "604:17:1"
																		},
																		"nativeSrc": "604:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "604:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "592:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "592:6:1"
																},
																"nativeSrc": "592:37:1",
																"nodeType": "YulFunctionCall",
																"src": "592:37:1"
															},
															"nativeSrc": "592:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "592:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "517:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:1",
														"nodeType": "YulTypedName",
														"src": "570:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "577:3:1",
														"nodeType": "YulTypedName",
														"src": "577:3:1",
														"type": ""
													}
												],
												"src": "517:118:1"
											},
											{
												"body": {
													"nativeSrc": "739:124:1",
													"nodeType": "YulBlock",
													"src": "739:124:1",
													"statements": [
														{
															"nativeSrc": "749:26:1",
															"nodeType": "YulAssignment",
															"src": "749:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "761:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "761:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "772:2:1",
																		"nodeType": "YulLiteral",
																		"src": "772:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "757:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "757:3:1"
																},
																"nativeSrc": "757:18:1",
																"nodeType": "YulFunctionCall",
																"src": "757:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "749:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "749:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "829:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "829:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "842:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "842:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "853:1:1",
																				"nodeType": "YulLiteral",
																				"src": "853:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "838:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "838:3:1"
																		},
																		"nativeSrc": "838:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "838:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "785:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "785:43:1"
																},
																"nativeSrc": "785:71:1",
																"nodeType": "YulFunctionCall",
																"src": "785:71:1"
															},
															"nativeSrc": "785:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "785:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "641:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "711:9:1",
														"nodeType": "YulTypedName",
														"src": "711:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "723:6:1",
														"nodeType": "YulTypedName",
														"src": "723:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "734:4:1",
														"nodeType": "YulTypedName",
														"src": "734:4:1",
														"type": ""
													}
												],
												"src": "641:222:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c80631c98b5671461004e5780633c6bb4361461006c578063a40774311461008a578063bf808d90146100a8575b5f80fd5b6100566100c6565b604051610063919061011f565b60405180910390f35b6100746100dd565b6040516100819190610150565b60405180910390f35b6100926100e2565b60405161009f919061011f565b60405180910390f35b6100b06100f9565b6040516100bd919061011f565b60405180910390f35b5f6001600211806100d8575060046002115b905090565b5f5481565b5f600160021180156100f457505f6002115b905090565b5f600460021415905090565b5f8115159050919050565b61011981610105565b82525050565b5f6020820190506101325f830184610110565b92915050565b5f819050919050565b61014a81610138565b82525050565b5f6020820190506101635f830184610141565b9291505056fea2646970667358221220b2b82f6a27bc4005ff8271c2c3875a96c4b84dd526a5f03daca9f1ff2a0467e164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1C98B567 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x3C6BB436 EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0xA4077431 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xBF808D90 EQ PUSH2 0xA8 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x11F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74 PUSH2 0xDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x150 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x92 PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9F SWAP2 SWAP1 PUSH2 0x11F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB0 PUSH2 0xF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x11F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x2 GT DUP1 PUSH2 0xD8 JUMPI POP PUSH1 0x4 PUSH1 0x2 GT JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x2 GT DUP1 ISZERO PUSH2 0xF4 JUMPI POP PUSH0 PUSH1 0x2 GT JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH1 0x2 EQ ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x119 DUP2 PUSH2 0x105 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x132 PUSH0 DUP4 ADD DUP5 PUSH2 0x110 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14A DUP2 PUSH2 0x138 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x163 PUSH0 DUP4 ADD DUP5 PUSH2 0x141 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xB8 0x2F PUSH11 0x27BC4005FF8271C2C3875A SWAP7 0xC4 0xB8 0x4D 0xD5 0x26 0xA5 CREATE RETURNDATASIZE 0xAC 0xA9 CALL SELFDESTRUCT 0x2A DIV PUSH8 0xE164736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "70:337:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;222:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;96:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;124:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;319:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;222:89;263:4;292:1;288;:5;:14;;;;301:1;297;:5;288:14;280:23;;222:89;:::o;96:19::-;;;;:::o;124:90::-;166:4;195:1;191;:5;:14;;;;;204:1;200;:5;191:14;183:23;;124:90;:::o;319:83::-;361:4;392:1;387;:6;385:9;378:16;;319:83;:::o;7:90:1:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o;434:77::-;471:7;500:5;489:16;;434:77;;;:::o;517:118::-;604:24;622:5;604:24;:::i;:::-;599:3;592:37;517:118;;:::o;641:222::-;734:4;772:2;761:9;757:18;749:26;;785:71;853:1;842:9;838:17;829:6;785:71;:::i;:::-;641:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "83000",
								"executionCost": "22232",
								"totalCost": "105232"
							},
							"external": {
								"logicalAND()": "396",
								"logicalNOT()": "391",
								"logicalOR()": "339",
								"val()": "2424"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 70,
									"end": 407,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 70,
									"end": 407,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 70,
									"end": 407,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 114,
									"end": 115,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 115,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 96,
									"end": 115,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 70,
									"end": 407,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 70,
									"end": 407,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 70,
									"end": 407,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 70,
									"end": 407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 70,
									"end": 407,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 70,
									"end": 407,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 407,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 70,
									"end": 407,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 70,
									"end": 407,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 70,
									"end": 407,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 70,
									"end": 407,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 70,
									"end": 407,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 70,
									"end": 407,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 70,
									"end": 407,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 70,
									"end": 407,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 407,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 70,
									"end": 407,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 407,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b2b82f6a27bc4005ff8271c2c3875a96c4b84dd526a5f03daca9f1ff2a0467e164736f6c634300081a0033",
									".code": [
										{
											"begin": 70,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 70,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70,
											"end": 407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 70,
											"end": 407,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 70,
											"end": 407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 407,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 70,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 70,
											"end": 407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 407,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 70,
											"end": 407,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 70,
											"end": 407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70,
											"end": 407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70,
											"end": 407,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 70,
											"end": 407,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 70,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 70,
											"end": 407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 407,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 70,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 70,
											"end": 407,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 70,
											"end": 407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "1C98B567"
										},
										{
											"begin": 70,
											"end": 407,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 70,
											"end": 407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "3C6BB436"
										},
										{
											"begin": 70,
											"end": 407,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70,
											"end": 407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "A4077431"
										},
										{
											"begin": 70,
											"end": 407,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 70,
											"end": 407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "BF808D90"
										},
										{
											"begin": 70,
											"end": 407,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 70,
											"end": 407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 407,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 70,
											"end": 407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 407,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 222,
											"end": 311,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 222,
											"end": 311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 222,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 222,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 222,
											"end": 311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 222,
											"end": 311,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 222,
											"end": 311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 222,
											"end": 311,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 222,
											"end": 311,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 222,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 222,
											"end": 311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 222,
											"end": 311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 222,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 222,
											"end": 311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 222,
											"end": 311,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 222,
											"end": 311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 222,
											"end": 311,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 222,
											"end": 311,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 222,
											"end": 311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 222,
											"end": 311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 222,
											"end": 311,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 222,
											"end": 311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 222,
											"end": 311,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 96,
											"end": 115,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 96,
											"end": 115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 96,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 96,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 96,
											"end": 115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 96,
											"end": 115,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 96,
											"end": 115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 96,
											"end": 115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 96,
											"end": 115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 96,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 96,
											"end": 115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 96,
											"end": 115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 96,
											"end": 115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 96,
											"end": 115,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 96,
											"end": 115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 96,
											"end": 115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 96,
											"end": 115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 96,
											"end": 115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 96,
											"end": 115,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 96,
											"end": 115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 115,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 124,
											"end": 214,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 124,
											"end": 214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 124,
											"end": 214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 124,
											"end": 214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 124,
											"end": 214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 124,
											"end": 214,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 124,
											"end": 214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 124,
											"end": 214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 214,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 124,
											"end": 214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 124,
											"end": 214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 124,
											"end": 214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 124,
											"end": 214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 124,
											"end": 214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 124,
											"end": 214,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 124,
											"end": 214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 124,
											"end": 214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 214,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 124,
											"end": 214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 124,
											"end": 214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 124,
											"end": 214,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 124,
											"end": 214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 124,
											"end": 214,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 319,
											"end": 402,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 319,
											"end": 402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 319,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 319,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 319,
											"end": 402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 319,
											"end": 402,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 319,
											"end": 402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 319,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 319,
											"end": 402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 319,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 319,
											"end": 402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 319,
											"end": 402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 319,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 319,
											"end": 402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 319,
											"end": 402,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 319,
											"end": 402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 319,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 319,
											"end": 402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 319,
											"end": 402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 319,
											"end": 402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 319,
											"end": 402,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 319,
											"end": 402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 319,
											"end": 402,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 222,
											"end": 311,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 222,
											"end": 311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 267,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 293,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 288,
											"end": 289,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 288,
											"end": 293,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 288,
											"end": 302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 288,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 288,
											"end": 302,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 288,
											"end": 302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 301,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 297,
											"end": 298,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 302,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 288,
											"end": 302,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 288,
											"end": 302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 280,
											"end": 303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 280,
											"end": 303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 222,
											"end": 311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 222,
											"end": 311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 96,
											"end": 115,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 96,
											"end": 115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 96,
											"end": 115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 96,
											"end": 115,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 96,
											"end": 115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 96,
											"end": 115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 124,
											"end": 214,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 124,
											"end": 214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 166,
											"end": 170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 196,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 191,
											"end": 192,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 191,
											"end": 196,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 191,
											"end": 205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 191,
											"end": 205,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 191,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 191,
											"end": 205,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 191,
											"end": 205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 204,
											"end": 205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 201,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 200,
											"end": 205,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 191,
											"end": 205,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 191,
											"end": 205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 183,
											"end": 206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 124,
											"end": 214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 124,
											"end": 214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 319,
											"end": 402,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 319,
											"end": 402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 361,
											"end": 365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 392,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 387,
											"end": 393,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 385,
											"end": 394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 378,
											"end": 394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 378,
											"end": 394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 319,
											"end": 402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 319,
											"end": 402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 97,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7,
											"end": 97,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 41,
											"end": 48,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 77,
											"end": 90,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 70,
											"end": 91,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 103,
											"end": 212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 199,
											"end": 204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 184,
											"end": 205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 179,
											"end": 182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 172,
											"end": 206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 218,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 305,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 328,
											"end": 346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 403,
											"end": 420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 356,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 356,
											"end": 421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 511,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 434,
											"end": 511,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 471,
											"end": 478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 489,
											"end": 505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 489,
											"end": 505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 511,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 434,
											"end": 511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 434,
											"end": 511,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 517,
											"end": 635,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 517,
											"end": 635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 604,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 622,
											"end": 627,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 604,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 604,
											"end": 628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 604,
											"end": 628,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 604,
											"end": 628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 599,
											"end": 602,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 592,
											"end": 629,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 517,
											"end": 635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 517,
											"end": 635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 517,
											"end": 635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 863,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 641,
											"end": 863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 734,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 772,
											"end": 774,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 761,
											"end": 770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 757,
											"end": 775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 749,
											"end": 775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 749,
											"end": 775,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 785,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 854,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 851,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 838,
											"end": 855,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 829,
											"end": 835,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 785,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 785,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 785,
											"end": 856,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 863,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 641,
											"end": 863,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"LogicalOperators.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"logicalAND()": "a4077431",
							"logicalNOT()": "bf808d90",
							"logicalOR()": "1c98b567",
							"val()": "3c6bb436"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"logicalAND\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"logicalNOT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"logicalOR\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"val\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"LogicalOperators.sol\":\"operators\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"LogicalOperators.sol\":{\"keccak256\":\"0xf3dfb7f5e86f1ec00ad3afc974dccbaaf03d946bb86ac918141a5fb2a28b0bdf\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://7694485993c47ca47f390d14752ac8b64784c57fa4c9b609cda30124152432e9\",\"dweb:/ipfs/QmbJj3ZJuuFS3xoj1RLDzqdsE5hJ2wmATJkFfbDP4eiK38\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "LogicalOperators.sol:operators",
								"label": "val",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"LogicalOperators.sol": {
				"ast": {
					"absolutePath": "LogicalOperators.sol",
					"exportedSymbols": {
						"operators": [
							47
						]
					},
					"id": 48,
					"license": "Unlicensed",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "operators",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 47,
							"linearizedBaseContracts": [
								47
							],
							"name": "operators",
							"nameLocation": "79:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "3c6bb436",
									"id": 4,
									"mutability": "mutable",
									"name": "val",
									"nameLocation": "108:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 47,
									"src": "96:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "96:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "114:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "172:42:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 11,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 9,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "191:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 10,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "195:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "191:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 14,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 12,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "200:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 13,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "204:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "200:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "191:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 16,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "190:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 8,
												"id": 17,
												"nodeType": "Return",
												"src": "183:23:0"
											}
										]
									},
									"functionSelector": "a4077431",
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "logicalAND",
									"nameLocation": "133:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "143:2:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "166:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 6,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "166:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "165:6:0"
									},
									"scope": 47,
									"src": "124:90:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "269:42:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 24,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "288:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 25,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "292:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "288:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 27,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "297:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "301:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "297:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "288:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 31,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "287:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 23,
												"id": 32,
												"nodeType": "Return",
												"src": "280:23:0"
											}
										]
									},
									"functionSelector": "1c98b567",
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "logicalOR",
									"nameLocation": "231:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "240:2:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "263:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 21,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "263:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "262:6:0"
									},
									"scope": 47,
									"src": "222:89:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "367:35:0",
										"statements": [
											{
												"expression": {
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "385:9:0",
													"subExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 39,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "387:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 40,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "392:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "387:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 42,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "386:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 38,
												"id": 44,
												"nodeType": "Return",
												"src": "378:16:0"
											}
										]
									},
									"functionSelector": "bf808d90",
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "logicalNOT",
									"nameLocation": "328:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "338:2:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "361:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 36,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "361:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "360:6:0"
									},
									"scope": 47,
									"src": "319:83:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 48,
							"src": "70:337:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "42:365:0"
				},
				"id": 0
			}
		}
	}
}